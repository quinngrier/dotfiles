#! /bin/sh -
#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#
# Usage: jqbc [<arg>]...
#
# Runs jq with the given arguments, and, for every span of text matching
# /"bc:[^"]*"/ in the output, adjusts that span by deleting bc: from the
# beginning and filtering the resulting text (except the quotes) through
# bc -l. For example, "bc:2^65" would become "36893488147419103232", and
# "bc:1/3" would become ".33333333333333333333".
#

case ${BASH_BOOTSTRAP+x}y$# in
  y0) BASH_BOOTSTRAP=x exec bash - "$0" ;;
  y*) BASH_BOOTSTRAP=x exec bash - "$0" "$@" ;;
esac
unset BASH_BOOTSTRAP

set -Eeuo pipefail || exit
trap exit ERR

declare -rx LC_ALL=C

jq "$@" | gawk '
  BEGIN {
    bc = "bc -l";
  }
  {
    n = patsplit($0, x, /"bc:[^"]*"/, y);
    printf "%s", y[0];
    for (i = 0; i++ != n;) {
      sub(/"bc:/, "", x[i]);
      sub(/"/, "", x[i]);
      print x[i] |& bc;
      s = bc |& getline x[i];
      if (s <= 0) {
        print "jqbc: bc |& getline returned " s >"/dev/stderr";
        exit 1;
      }
      bc_is_running = 1;
      printf "%s", "\"" x[i] "\"" y[i];
    }
    printf "\n";
  }
  END {
    if (bc_is_running) {
      s = close(bc);
      if (s != 0) {
        print "jqbc: close(bc) returned " s >"/dev/stderr";
        exit 1;
      }
    }
  }
'
