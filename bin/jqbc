#! /bin/sh -

#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#

#
# Usage: jqbc [<arg>]...
#
# Runs jq with the given arguments and, for every string that begins
# with "bc:" in the output, adjusts the string by deleting "bc:" and
# filtering the remaining text through bc -l. The output of bc -l is
# also adjusted to be formatted more normally. For example:
#
#       $ jqbc -n '"bc:1/2"'
#       "0.5"
#
#       $ jqbc -n '"bc:1/3"'
#       "0.33333333333333333333"
#
#       $ jqbc -n '"bc:3^90"'
#       "8727963568087712425891397479476727340041449"
#

case ${BASH_BOOTSTRAP+x}y$# in
  y0) BASH_BOOTSTRAP=x exec bash - "$0" ;;
  y*) BASH_BOOTSTRAP=x exec bash - "$0" "$@" ;;
esac
unset BASH_BOOTSTRAP

set -E -e -u -o pipefail || exit $?
trap exit ERR

declare -r -x LC_ALL=C

jq "$@" | gawk -v argv0="$0" '
  BEGIN {
    bc = "bc -l";
  }
  {
    n = patsplit($0, x, /(^"|[^\\]")bc:[^\\"]*"/, y);
    printf "%s", y[0];
    for (i = 0; i++ != n;) {
      if (x[i] ~ /^"bc:/) {
        w = "";
        sub(/^"bc:/, "", x[i]);
      } else {
        w = substr(x[i], 1, 1);
        sub(/^."bc:/, "", x[i]);
      }
      sub(/"$/, "", x[i]);
      print x[i] |& bc;
      s = bc |& getline x[i];
      if (s <= 0) {
        print argv0 ": bc |& getline returned " s >"/dev/stderr";
        exit 1;
      }
      bc_is_running = 1;
      if (x[i] ~ /\./) {
        sub(/^\./, "0.", x[i]);
        sub(/0+$/, "", x[i]);
      }
      printf "%s", w "\"" x[i] "\"" y[i];
    }
    printf "\n";
  }
  END {
    if (bc_is_running) {
      s = close(bc);
      if (s != 0) {
        print argv0 ": close(bc) returned " s >"/dev/stderr";
        exit 1;
      }
    }
  }
'
