#! /bin/bash -

#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#

#
# Usage: tts [<word>...]
#
# Converts text to speech and plays it.
#
# If at least one <word> is given, the input is the space-separated
# concatenation of the <word>s. Otherwise, the input is read from
# standard input.
#
# By default, this script will try to find and use the best text to
# speech engine you have available. You can also pick the engine by
# setting the TTS_ENGINE environment variable.
#
# The supported text to speech engines are as follows:
#
#    dotnet
#
#       This is the SpeechSynthesizer class from the .NET
#       platform.
#
#       If you're on Windows, this engine will always be tried as
#       a last resort.
#

set -E -e -u -o pipefail || exit $?
trap exit ERR

declare -r -x LC_ALL=C

case ${1-} in -*)
  printf '%s\n' "Options are not supported yet." >&2
  exit 1
esac

#-----------------------------------------------------------------------
# .NET
#-----------------------------------------------------------------------

if [[ ${TTS_ENGINE-} == dotnet || \
      ( ! ${TTS_ENGINE-} && ${WINDIR-} ) ]]; then

  x='
    BEGIN {
      q = "'\''";
    }
    {
      if (NR > 1) {
        printf "%s", " + \"`r`n\" + "
      }
      gsub(/'\''/, q q);
      printf "%s", q $0 q;
    }
  '
  case $# in 0)
    x=$(awk "$x")
  ;; *)
    x=$(awk "$x" <<<"$*")
  esac

  unset pid
  trap '
    case ${pid-} in *?)
      kill -s INT $pid || :
    esac
  ' INT
  PowerShell -Command - <<EOF &
Add-Type -AssemblyName System.Speech;
(New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak($x);
EOF
  pid=$!
  wait $pid

  exit

fi

#-----------------------------------------------------------------------

printf '%s\n' "No text to speech engine found." >&2
exit 1
