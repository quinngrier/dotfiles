#! /bin/sh -
#
# The authors of this file have waived all copyright and
# related or neighboring rights to the extent permitted by
# law as described by the CC0 1.0 Universal Public Domain
# Dedication. You should have received a copy of the full
# dedication along with this file, typically as a file
# named <CC0-1.0.txt>. If not, it may be available at
# <https://creativecommons.org/publicdomain/zero/1.0/>.
#
# This script is written in portable shell.
#

files='
  .bash_profile
  .bashrc
  .gitattributes
  .gitconfig
  .inputrc
  .mailmap
  .minttyrc
  .screenrc
  .ssh/config
  .vimrc
  CC0-1.0.txt
  bin/adock
  bin/git-c
  bin/git-d
  bin/git-u
  bin/git-ub
  bin/gpgqg
  bin/gpgqg-gpgsec
  bin/gpgsec
  bin/jqbc
  bin/s
  bin/sshqg
  bin/sshqg-gpgsec
  deploy
'
readonly files

LC_ALL=C
readonly LC_ALL
export LC_ALL

case $0 in
  ./deploy)
    :
  ;;
  *)
    printf '%s\n' "$0: this script must only be run as ./deploy" >&2
    exit 1
  ;;
esac

sed_script_1='
  s/'\''/&\\&&/g
  1 s/^/'\''/
  $ s/$/'\''/
'
readonly sed_script_1

sed_script_2='
  s/'\''/&\\&&/g
  1 s/^/'\''/
  $ s/.$/'\''/
'
readonly sed_script_2

parse_options=:
make_tarball=:

case $# in
  0) set x ;;
  *) set x "$@" ;;
esac
until shift && (exit ${1+1}0); do

  if $parse_options; then
    case $1 in

      --help)
        cat <<'EOF' || exit $?
Usage: ./deploy [<dir>]...

Deploys the dotfiles to each <dir>. If <dir> contains a colon character,
it specifies a directory on a remote machine, where the text before the
last colon character is the ssh address, and the text after the last
colon character is the directory. If the text after the last colon
character is empty, it is adjusted to ".".

Examples:

      ./deploy ~   Deploys the dotfiles to your home directory.
      ./deploy R:  Deploys the dotfiles to your home directory
                   on the remote machine whose ssh address is R.
EOF
        exit 0
      ;;

      --help=*)
        printf '%s\n' "$0: option forbids an argument: --help" >&2
        exit 1
      ;;

      --)
        parse_options=false
        continue
      ;;

      --=*)
        printf '%s\n' "$0: option forbids an argument: --" >&2
        exit 1
      ;;

      -?*)
        awk -v argv0="$0" '
          BEGIN { printf "%s", argv0 ": unknown option: "; }
          {
            if (NR > 1 || /^--/) {
              n = sub(/=.*/, "");
              printf "%s", (NR > 1 ? "\n" : "") $0;
              if (n) exit 0;
            } else {
              printf "%s", substr($0, 1, 2) (/^-$/ ? "\n" : "");
              exit 0;
            }
          }
          END { printf "%s", "\n"; }
        ' <<EOF >&2
$1
EOF
        exit 1
      ;;

    esac
  fi

  if $make_tarball; then
    tar czf deploy.tar.gz $files
    make_tarball=false
  fi

  case $1 in
    *:*)
      x='\(.*:\)'
      x=`expr "$1" : "$x"` || exit $?
      x=`sed "$sed_script_2" <<EOF
$x
EOF
      ` || exit $?
      eval "remote=$x"
      x='.*:\(.*\)'
      x=`expr "$1." : "$x"` || exit $?
      x=`sed "$sed_script_2" <<EOF
$x
EOF
      ` || exit $?
      eval "dst=$x"
      case $dst in
        '') dst=. ;;
        [./]*) : ;;
        *) dst=./$dst ;;
      esac
      dst=`sed "$sed_script_1" <<EOF
$dst
EOF
      ` || exit $?
      ssh "$remote" "
        mkdir -p $dst || exit $?
        cd $dst || exit $?
        tar xz || exit $?
        chmod -R go-rwx .ssh || exit $?
      " <deploy.tar.gz || exit $?
    ;;
    *)
      dst=$1
      case $dst in
        '') : ;;
        [./]*) : ;;
        *) dst=./$dst ;;
      esac
      (
        mkdir -p "$dst" || exit $?
        cd "$dst" || exit $?
        tar xz || exit $?
        chmod -R go-rwx .ssh || exit $?
      ) <deploy.tar.gz || exit $?
    ;;
  esac

done

if $make_tarball; then
  :
else
  rm deploy.tar.gz || exit $?
fi
